apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-keycloak
          image: curlimages/curl
          command: ['sh', '-c', 'until curl -f http://bank-app-keycloak-service:8888/realms/bankapp; do echo "Waiting for Keycloak..."; sleep 5; done']
        - name: wait-for-database
          image: postgres:15
          command: ['sh', '-c', 'until pg_isready -h bank-app-shared-db -p 5432 -U bankapp; do echo "Waiting for database..."; sleep 2; done']
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: bank-app-shared-db
                  key: password
        - name: wait-for-kafka
          image: confluentinc/cp-kafka:7.4.0
          command: ['sh', '-c', 'until kafka-topics --bootstrap-server bank-app-app-kafka-controller-0.bank-app-app-kafka-controller-headless:9092 --list; do echo "Waiting for Kafka..."; sleep 2; done']
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: exchange-service-cm
          env:
            - name: DB_USERNAME
              value: {{ tpl .Values.config.database_username . | quote}}
            - name: DB_URL
              value: {{tpl .Values.config.database_url . | quote}}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: bank-app-shared-db
                  key: password
            - name: SPRING_PROFILES_ACTIVE
              value: "{{ .Values.profiles }}"

          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: {{ .Values.liveness.delay }}
            periodSeconds: {{ .Values.liveness.timeout }}
            failureThreshold: 10
            httpGet:
              path: {{ .Values.liveness.path }}
              port: http
          readinessProbe:
            initialDelaySeconds: {{ .Values.readiness.delay }}
            periodSeconds: {{ .Values.readiness.timeout }}
            failureThreshold: 10
            httpGet:
              path: {{ .Values.readiness.path }}
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
